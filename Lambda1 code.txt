import json
import urllib.parse
import boto3
print('Loding function')

s3_client = boto3.client('s3')
s3 = boto3.resource('s3')

dynamodb = boto3.resource('dynamodb')
#table = dynamodb.Table('OpticalRecognitionTable')
def lambda_handler(event, context):
   
    print("event: ", event)
    print("context: ", context)
    bucket = event['Records'][0]['s3']['bucket']['name']
    real_key = event['Records'][0]['s3']['object']['key']
    key = urllib.parse.unquote_plus(event['Records'][0]['s3']['object']['key'], encoding = 'utf-8')
    print("bucket: ", bucket)
    print("real key: ", real_key)
    jsonFile = s3_client.get_object(Bucket=bucket,Key=key)
    print("jsonFile: ", jsonFile['ContentType'])
    textract_client = boto3.client('textract')
    response = textract_client.detect_document_text(
     Document={
         'S3Object': {
             'Bucket': "ksboptical",
             'Name': "Typenschilder.PNG"
         }
     })
     
    for item in response["Blocks"]:
        if item["BlockType"] == "LINE":
           print (item["Text"])
    print("Processing in progress: ", response["Blocks"])

    newFileName = 'createdJsonFile' + '.json'
    print("newFileName: ", newFileName)
    uploadByteStream = bytes(json.dumps(response["Blocks"]).encode('UTF-8'))
    print("uploadByteStream: ", uploadByteStream)
    s3_client.put_object(Bucket=bucket, Key=newFileName, Body=uploadByteStream)
    print("End")
    s3_resource = boto3.resource('s3')

    new_bucket_name = 'ksboptical'
    target_bucket = 'ksbopticaloutput'
    copy_source = {'Bucket': bucket, 'Key':key}
    print ("Source bucket : ", bucket)
    print ("Target bucket : ", target_bucket)
    print ("Log Stream name: ", context.log_stream_name)
    print ("Log Group name: ", context.log_group_name)
    print ("Request ID: ", context.aws_request_id)
    print ("Mem. limits(MB): ", context.memory_limit_in_mb)
    destbucket = s3.Bucket('ksbopticaloutput')
    destbucket.copy(copy_source, key)
    print("====================Erfolg=======================================")